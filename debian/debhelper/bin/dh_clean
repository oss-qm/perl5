#!/usr/bin/perl -w

=head1 NAME

dh_clean - clean up package build directories

=cut

use strict;
use Debian::Debhelper::Dh_Lib;

=head1 SYNOPSIS

B<dh_clean> [S<I<debhelper options>>] [B<-k>] [B<-d>] [B<-X>I<item>] [S<I<file ...>>]

=head1 DESCRIPTION

dh_clean is a debhelper program that is responsible for cleaning up after a
package is built. It removes the package build directories, and removes some
other files, such as debian/substvars, debian/files, and any detritus left
behind by other debhelper commands (debian/*.debhelper). It also removes
common files that should not appear in a debian diff:
  #*# *~ DEADJOE *.orig *.rej *.SUMS TAGS core .deps/* *.P

=head1 OPTIONS

=over 4

=item B<-k>, B<--keep>

Do not delete debian/files. When do you want to use this? Anytime you have a
debian/rules that has 2 binary targets that build different .deb packages;
for example, one target is binary-arch, and the other is binary-indep, or
one target builds the shared library, and the other the -dev package. If you
didn't use -k in these cases, then debian/files would be deleted in the
middle, and your changes file will only contain the last binary package that
was built.

=item B<-d>, B<--dirs-only>

Only clean the package build directories, do not clean up any other files
at all.

=item B<-X>I<item> B<--exclude=>I<item>

Exclude files that contain "item" anywhere in their filename from being
deleted, even if they would normally be deleted. You may use this option
multiple times to build up a list of things to exclude.

=item I<file ...>

Delete these files too.

=back

=cut

init();

foreach my $package (@{$dh{DOPACKAGES}}) {
	my $tmp=tmpdir($package);
	my $ext=pkgext($package);

	if (! $dh{D_FLAG}) {
		doit("rm","-f","debian/${ext}substvars");
	}
	
	doit ("rm","-rf",$tmp);
}

if (! $dh{D_FLAG}) {
	if (@ARGV) {
		doit("rm","-f","--",@ARGV);
	}

	if (! $dh{K_FLAG}) {
		doit("rm","-f","debian/files");
	}

	# These are all debhelper temp files, and so it is safe to 
	# wildcard them.
	complex_doit("rm -f debian/*.debhelper");

	# See if some files that would normally be deleted are excluded.
	my $find_options='';
	if (defined($dh{EXCLUDE_FIND}) && $dh{EXCLUDE_FIND} ne '') {
		$find_options="-a ! ( $dh{EXCLUDE_FIND} )";
	}

	# Remove other temp files.
	# (The \s+ is important, \s won't work because find would get null
	# parameters). Note that you _don't_ quote wildcards used by find
	# in here.
	doit(split(/\s+/,"find . -type f -a
	        ( -name #*# -o -name *~ -o -name DEADJOE
		 -o -name *.orig -o -name *.rej -o -name *.bak
		 -o -name .*.orig -o -name .*.rej -o -name .SUMS
		 -o -name TAGS -o -name core -o ( -path */.deps/* -a -name *.P )
		) $find_options -exec rm -f {} ;"));
}

doit('rm', '-rf', 'debian/tmp') if -x 'debian/tmp' && ! compat(1);

=head1 SEE ALSO

L<debhelper(1)>

This program is a part of debhelper.

=head1 AUTHOR

Joey Hess <joeyh@debian.org>

=cut

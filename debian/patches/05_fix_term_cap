[from perlsnap] creates a termcap on the fly using infocmp when none
is available and cleans up some undefined errors.

diff -ur perl-5.6.1/lib/Term/Cap.pm /tmp/Cap.pm
--- perl-5.6.1/lib/Term/Cap.pm	Mon Dec  3 22:22:16 2001
+++ /tmp/Cap.pm	Mon Dec  3 22:13:25 2001
@@ -1,7 +1,13 @@
 package Term::Cap;
 use Carp;
 
-# Last updated: Thu Dec 14 20:02:42 CST 1995 by sanders@bsdi.com
+our $VERSION = '1.01';
+
+# Version undef: Thu Dec 14 20:02:42 CST 1995 by sanders@bsdi.com
+# Version 1.00:  Thu Nov 30 23:34:29 EST 2000 by schwern@pobox.com
+#	[PATCH] $VERSION crusade, strict, tests, etc... all over lib/
+# Version 1.01:  Wed May 23 00:00:00 CST 2001 by d-lewart@uiuc.edu
+#	Avoid warnings in Tgetent and Tputs
 
 # TODO:
 # support Berkeley DB termcaps
@@ -162,6 +168,18 @@
     }
 
     my @termcap_path = termcap_path;
+
+    unless (@termcap_path || $entry)
+    {
+	# last resort--fake up a termcap from terminfo 
+	local $ENV{TERM} = $term;
+	if ($^O ne 'VMS') {
+	    $entry = `infocmp -C 2>/dev/null`;
+	} else {
+	    $entry = undef;
+	}
+    }
+
     croak "Can't find a valid termcap file" unless @termcap_path || $entry;
 
     $state = 1;					# 0 == finished
@@ -202,7 +220,7 @@
 	    }
 	}
 	defined $entry or $entry = '';
-	$entry .= $_;
+	$entry .= $_ if $_;
     };
 
     while ($state != 0) {
@@ -281,7 +299,7 @@
     my($string, $cnt, $FH) = @_;
     my($decr, $ms);
 
-    if ($string =~ /(^[\d.]+)(\*?)(.*)$/) {
+    if (defined $string && $string =~ /(^[\d.]+)(\*?)(.*)$/) {
 	$ms = $1;
 	$ms *= $cnt if $2;
 	$string = $3;
@@ -305,8 +323,11 @@
 	$string = Tpad($self, $self->{'_' . $cap}, $cnt);
     } else {
 	# cache result because Tpad can be slow
-	$string = defined $self->{$cap} ? $self->{$cap} :
-	    ($self->{$cap} = Tpad($self, $self->{'_' . $cap}, 1));
+	unless (exists $self->{$cap}) {
+	    $self->{$cap} = exists $self->{"_$cap"} ?
+		Tpad($self, $self->{"_$cap"}, 1) : undef;
+	}
+	$string = $self->{$cap};
     }
     print $FH $string if $FH;
     $string;

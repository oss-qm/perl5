Change 22781 by davem@davem-percy on 2004/05/04 19:20:36

[perl #29340] Bizarre copy of ARRAY
make sure a pad op's flags are updated after optimising away
the assignment in my @a = () (see change 22520).

diff -Naur --exclude=debian perl-5.8.4.orig/op.c perl-5.8.4/op.c
--- perl-5.8.4.orig/op.c	2004-04-02 20:29:47.000000000 +1000
+++ perl-5.8.4/op.c	2004-11-07 00:48:33.000000000 +1100
@@ -3205,6 +3205,7 @@
 		&& (left->op_private & OPpLVAL_INTRO))
 	{
 	    op_free(right);
+	    left->op_flags &= ~(OPf_REF|OPf_SPECIAL);
 	    return left;
 	}
 	curop = list(force_list(left));
diff -Naur --exclude=debian perl-5.8.4.orig/t/op/my.t perl-5.8.4/t/op/my.t
--- perl-5.8.4.orig/t/op/my.t	2000-09-13 01:05:04.000000000 +1100
+++ perl-5.8.4/t/op/my.t	2004-11-07 00:50:21.000000000 +1100
@@ -2,7 +2,7 @@
 
 # $RCSfile: my.t,v $
 
-print "1..31\n";
+print "1..33\n";
 
 sub foo {
     my($a, $b) = @_;
@@ -99,3 +99,15 @@
     # Supposed to be copy-on-write via force_normal after a THINKFIRST check.
     print "$full $fonts{nok}\n";
 }
+
+#  [perl #29340] optimising away the = () left the padav returning the
+# array rather than the contents, leading to 'Bizarre copy of array' error
+
+sub opta { my @a=() }
+sub opth { my %h=() }
+eval { my $x = opta };
+print "not " if $@;
+print "ok 32\n";
+eval { my $x = opth };
+print "not " if $@;
+print "ok 33\n";

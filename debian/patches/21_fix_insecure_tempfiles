CAN-2004-0976:

  Multiple scripts in the perl package in Trustix Secure Linux 1.5 through
  2.1, and possibly other operating systems, allows local users to
  overwrite files via a symlink attack on temporary files.

 * Some unsafe examples in the DB_File POD
 * Use of hard coded temp file name in ext/IO/t/io_unix.t
 * Hardcoded tmp file in ext/ODBM_File/ODBM_File.xs
 * Some potentially unsafe examples in POSIX pod
 * Hardcoded tmp file path in example of Socket.pm
 * Example in Cookie.pm that uses /usr/tmp
 * An example in MakeMaker.pm that suggets setting PREFIX=/tmp/myperl5
 * Insecure use of /tmp file in ExtUtils/inst
 * Insecure use of /tmp file in docs of Shell.pm
 * Insecure use of /tmp file in docs of dotsh.pl
 * Insecure use of /tmp file in setterm() function of lib/perl5db.pl
 * Insecure use of /tmp file in mpeix/nm
 * Insecure use of /tmp file in perly.fixer
 * Insecure use of /tmp file in perldbmfilter.pod, perldebug.pod
 * Various fixes in the FAQ
 * perlfunc.pod, ditto
 * perlipc.pod, ditto
 * perllexwarn.pod, ditto
 * perlobj.pod, ditto
 * perlop.pod, ditto
 * perlopentut.pod, ditto
 * Insecure use of /tmp in utils/c2ph.PL, utils/perlbug.PL

diff -Naur --exclude=debian perl-5.6.1.orig/ext/DB_File/DB_File.pm perl-5.6.1/ext/DB_File/DB_File.pm
--- perl-5.6.1.orig/ext/DB_File/DB_File.pm	2001-02-23 13:57:53.000000000 +1100
+++ perl-5.6.1/ext/DB_File/DB_File.pm	2004-12-13 00:14:54.000000000 +1100
@@ -1603,7 +1603,7 @@
     use DB_File ;
 
     my %hash ;
-    my $filename = "/tmp/filt" ;
+    my $filename = "filt" ;
     unlink $filename ;
 
     my $db = tie %hash, 'DB_File', $filename, O_CREAT|O_RDWR, 0666, $DB_HASH 
@@ -1645,7 +1645,7 @@
     use strict ;
     use DB_File ;
     my %hash ;
-    my $filename = "/tmp/filt" ;
+    my $filename = "filt" ;
     unlink $filename ;
 
 
@@ -1676,8 +1676,8 @@
 
 The locking technique went like this. 
 
-    $db = tie(%db, 'DB_File', '/tmp/foo.db', O_CREAT|O_RDWR, 0644)
-        || die "dbcreat /tmp/foo.db $!";
+    $db = tie(%db, 'DB_File', 'foo.db', O_CREAT|O_RDWR, 0644)
+        || die "dbcreat foo.db $!";
     $fd = $db->fd;
     open(DB_FH, "+<&=$fd") || die "dup $!";
     flock (DB_FH, LOCK_EX) || die "flock: $!";
diff -Naur --exclude=debian perl-5.6.1.orig/ext/ODBM_File/ODBM_File.xs perl-5.6.1/ext/ODBM_File/ODBM_File.xs
--- perl-5.6.1.orig/ext/ODBM_File/ODBM_File.xs	2001-03-04 06:53:20.000000000 +1100
+++ perl-5.6.1/ext/ODBM_File/ODBM_File.xs	2004-12-13 00:25:26.000000000 +1100
@@ -27,7 +27,7 @@
  * Set DBM_BUG_DUPLICATE_FREE in the extension hint file.
  */
 /* Close the previous dbm, and fail to open a new dbm */
-#define dbmclose()	((void) dbminit("/tmp/x/y/z/z/y"))
+#define dbmclose()	((void) dbminit("/nonexistent"))
 #endif
 
 #include <fcntl.h>
diff -Naur --exclude=debian perl-5.6.1.orig/ext/POSIX/POSIX.pod perl-5.6.1/ext/POSIX/POSIX.pod
--- perl-5.6.1.orig/ext/POSIX/POSIX.pod	2001-03-24 02:41:18.000000000 +1100
+++ perl-5.6.1/ext/POSIX/POSIX.pod	2004-12-13 00:33:01.000000000 +1100
@@ -407,9 +407,9 @@
 uses file descriptors such as those obtained by calling C<POSIX::open>.
 
 The following will determine the maximum length of the longest allowable
-pathname on the filesystem which holds C</tmp/foo>.
+pathname on the filesystem which holds C</var/foo>.
 
-	$fd = POSIX::open( "/tmp/foo", &POSIX::O_RDONLY );
+	$fd = POSIX::open( "/var/foo", &POSIX::O_RDONLY );
 	$path_max = POSIX::fpathconf( $fd, &POSIX::_PC_PATH_MAX );
 
 Returns C<undef> on failure.
@@ -875,7 +875,7 @@
 
 Open a directory for reading.
 
-	$dir = POSIX::opendir( "/tmp" );
+	$dir = POSIX::opendir( "/var" );
 	@files = POSIX::readdir( $dir );
 	POSIX::closedir( $dir );
 
@@ -886,9 +886,9 @@
 Retrieves the value of a configurable limit on a file or directory.
 
 The following will determine the maximum length of the longest allowable
-pathname on the filesystem which holds C</tmp>.
+pathname on the filesystem which holds C</var>.
 
-	$path_max = POSIX::pathconf( "/tmp", &POSIX::_PC_PATH_MAX );
+	$path_max = POSIX::pathconf( "/var", &POSIX::_PC_PATH_MAX );
 
 Returns C<undef> on failure.
 
diff -Naur --exclude=debian perl-5.6.1.orig/ext/Socket/Socket.pm perl-5.6.1/ext/Socket/Socket.pm
--- perl-5.6.1.orig/ext/Socket/Socket.pm	2001-02-23 13:57:54.000000000 +1100
+++ perl-5.6.1/ext/Socket/Socket.pm	2004-12-22 22:23:56.000000000 +1100
@@ -32,8 +32,8 @@
 
     $proto = getprotobyname('tcp');
     socket(Socket_Handle, PF_UNIX, SOCK_STREAM, $proto);
-    unlink('/tmp/usock');
-    $sun = sockaddr_un('/tmp/usock');
+    unlink('/var/run/usock');
+    $sun = sockaddr_un('/var/run/usock');
     connect(Socket_Handle,$sun);
 
 =head1 DESCRIPTION
diff -Naur --exclude=debian perl-5.6.1.orig/lib/CGI/Cookie.pm perl-5.6.1/lib/CGI/Cookie.pm
--- perl-5.6.1.orig/lib/CGI/Cookie.pm	2001-03-04 06:53:20.000000000 +1100
+++ perl-5.6.1/lib/CGI/Cookie.pm	2004-12-22 22:29:46.000000000 +1100
@@ -363,7 +363,7 @@
 You may also retrieve cookies that were stored in some external
 form using the parse() class method:
 
-       $COOKIES = `cat /usr/tmp/Cookie_stash`;
+       $COOKIES = `cat /var/run/www/Cookie_stash`;
        %cookies = parse CGI::Cookie($COOKIES);
 
 =head2 Manipulating Cookies
diff -Naur --exclude=debian perl-5.6.1.orig/lib/ExtUtils/MakeMaker.pm perl-5.6.1/lib/ExtUtils/MakeMaker.pm
--- perl-5.6.1.orig/lib/ExtUtils/MakeMaker.pm	2001-02-23 13:57:55.000000000 +1100
+++ perl-5.6.1/lib/ExtUtils/MakeMaker.pm	2004-12-22 22:33:57.000000000 +1100
@@ -898,7 +898,7 @@
 The Makefile to be produced may be altered by adding arguments of the
 form C<KEY=VALUE>. E.g.
 
-  perl Makefile.PL PREFIX=/tmp/myperl5
+  perl Makefile.PL PREFIX=~/myperl5
 
 Other interesting targets in the generated Makefile are
 
diff -Naur --exclude=debian perl-5.6.1.orig/lib/ExtUtils/inst perl-5.6.1/lib/ExtUtils/inst
--- perl-5.6.1.orig/lib/ExtUtils/inst	2001-02-23 13:57:55.000000000 +1100
+++ perl-5.6.1/lib/ExtUtils/inst	2004-12-22 22:40:25.000000000 +1100
@@ -2,6 +2,7 @@
 
 use strict;
 use IO::File;
+use File::Temp;
 use ExtUtils::Packlist;
 use ExtUtils::Installed;
 
@@ -58,16 +59,12 @@
       $reply =~ /^t\s*/ and do
          {
          my $file = (split(' ', $reply))[1];
-         my $tmp = "/tmp/inst.$$";
-         if (my $fh = IO::File->new($tmp, "w"))
-            {
-            $fh->print(join("\n", $Inst->files($module)));
-            $fh->close();
-            system("tar cvf $file -I $tmp");
-            unlink($tmp);
-            last CASE;
-            }
-         else { print("Can't open $file: $!\n"); }
+         my ($fh, $tmp) = File::Temp::tempfile(UNLINK => 1);
+         $fh->print(join("\n", $Inst->files($module)));
+         $fh->close();
+         # This used to use -I which is wrong for GNU tar.
+         system("tar cvf $file -T $tmp");
+         unlink($tmp);
          last CASE;
          };
       $reply eq 'v' and do
diff -Naur --exclude=debian perl-5.6.1.orig/lib/Shell.pm perl-5.6.1/lib/Shell.pm
--- perl-5.6.1.orig/lib/Shell.pm	2001-02-23 13:57:55.000000000 +1100
+++ perl-5.6.1/lib/Shell.pm	2004-12-22 22:42:12.000000000 +1100
@@ -139,7 +139,7 @@
     sub ps;
     print ps -ww;
 
-    cp("/etc/passwd", "/tmp/passwd");
+    cp("/etc/passwd", "/etc/passwd.orig");
 
 That's maybe too gonzo.  It actually exports an AUTOLOAD to the current
 package (and uncovered a bug in Beta 3, by the way).  Maybe the usual
diff -Naur --exclude=debian perl-5.6.1.orig/lib/dotsh.pl perl-5.6.1/lib/dotsh.pl
--- perl-5.6.1.orig/lib/dotsh.pl	2001-02-23 13:57:55.000000000 +1100
+++ perl-5.6.1/lib/dotsh.pl	2004-12-22 22:45:47.000000000 +1100
@@ -27,9 +27,9 @@
 #         dependent upon. These variables MUST be defined using shell syntax.
 #
 #   Example:
-#      &dotsh ('/tmp/foo', 'arg1');
-#      &dotsh ('/tmp/foo');
-#      &dotsh ('/tmp/foo arg1 ... argN');
+#      &dotsh ('/foo/bar', 'arg1');
+#      &dotsh ('/foo/bar');
+#      &dotsh ('/foo/bar arg1 ... argN');
 #
 sub dotsh {
    local(@sh) = @_;
@@ -54,9 +54,9 @@
       }
    }
    if (length($vars) > 0) {
-      system "$shell \"$vars;. $command $args; set > /tmp/_sh_env$$\"";
+      open (_SH_ENV, "$shell \"$vars && . $command $args && set \" |") || die;
    } else {
-      system "$shell \". $command $args; set > /tmp/_sh_env$$\"";
+      open (_SH_ENV, "$shell \". $command $args && set \" |") || die;
    }
 
    open (_SH_ENV, "/tmp/_sh_env$$") || die "Could not open /tmp/_sh_env$$!\n";
diff -Naur --exclude=debian perl-5.6.1.orig/lib/perl5db.pl perl-5.6.1/lib/perl5db.pl
--- perl-5.6.1.orig/lib/perl5db.pl	2001-02-23 13:57:55.000000000 +1100
+++ perl-5.6.1/lib/perl5db.pl	2004-12-22 22:49:31.000000000 +1100
@@ -56,7 +56,7 @@
 # TTY  - the TTY to use for debugging i/o.
 #
 # noTTY - if set, goes in NonStop mode.  On interrupt if TTY is not set
-# uses the value of noTTY or "/tmp/perldbtty$$" to find TTY using
+# uses the value of noTTY or "$HOME/.perldbtty$$" to find TTY using
 # Term::Rendezvous.  Current variant is to have the name of TTY in this
 # file.
 #
@@ -1755,7 +1755,7 @@
 	    select($sel);
 	} else {
 	    eval "require Term::Rendezvous;" or die;
-	    my $rv = $ENV{PERLDB_NOTTY} || "/tmp/perldbtty$$";
+	    my $rv = $ENV{PERLDB_NOTTY} || "$ENV{HOME}/.perldbtty$$";
 	    my $term_rv = new Term::Rendezvous $rv;
 	    $IN = $term_rv->IN;
 	    $OUT = $term_rv->OUT;
diff -Naur --exclude=debian perl-5.6.1.orig/mpeix/nm perl-5.6.1/mpeix/nm
--- perl-5.6.1.orig/mpeix/nm	2001-02-23 13:57:56.000000000 +1100
+++ perl-5.6.1/mpeix/nm	2004-12-22 22:52:51.000000000 +1100
@@ -22,12 +22,12 @@
 # I wanted to pipe this into awk, but it fell victim to a known pipe/streams
 # bug on my multiprocessor machine.
 
-callci xeq linkedit.pub.sys \"$LIST\" >/tmp/nm.$$
+callci xeq linkedit.pub.sys \"$LIST\" >nm.$$
 
 awk '\
     / data  univ / { printf "%-20s|%10s|%-6s|%-7s|%s\n",$1,$5,"extern","data","?"} \
-    / entry univ / { printf "%-20s|%10s|%-6s|%-7s|%s\n",$1,$7,"extern","entry","?"}' /tmp/nm.$$
+    / entry univ / { printf "%-20s|%10s|%-6s|%-7s|%s\n",$1,$7,"extern","entry","?"}' nm.$$
 
-rm -f /tmp/nm.$$
+rm -f nm.$$
 
 exit 0
diff -Naur --exclude=debian perl-5.6.1.orig/perly.fixer perl-5.6.1/perly.fixer
--- perl-5.6.1.orig/perly.fixer	2001-02-23 13:57:56.000000000 +1100
+++ perl-5.6.1/perly.fixer	2004-12-22 22:55:59.000000000 +1100
@@ -17,7 +17,7 @@
 
 input=$1
 output=$2
-tmp=/tmp/f$$
+tmp=perly$$
 
 if grep 'yaccpar 1.8 (Berkeley)' $input >/dev/null 2>&1; then
     cp $input $output
diff -Naur --exclude=debian perl-5.6.1.orig/pod/perldbmfilter.pod perl-5.6.1/pod/perldbmfilter.pod
--- perl-5.6.1.orig/pod/perldbmfilter.pod	2001-02-23 13:57:56.000000000 +1100
+++ perl-5.6.1/pod/perldbmfilter.pod	2004-12-22 22:58:23.000000000 +1100
@@ -91,7 +91,7 @@
     use Fcntl ;
 
     my %hash ;
-    my $filename = "/tmp/filt" ;
+    my $filename = "filt" ;
     unlink $filename ;
 
     my $db = tie(%hash, 'SDBM_File', $filename, O_RDWR|O_CREAT, 0640)
@@ -137,7 +137,7 @@
     use warnings ;
     use DB_File ;
     my %hash ;
-    my $filename = "/tmp/filt" ;
+    my $filename = "filt" ;
     unlink $filename ;
 
 
diff -Naur --exclude=debian perl-5.6.1.orig/pod/perldebug.pod perl-5.6.1/pod/perldebug.pod
--- perl-5.6.1.orig/pod/perldebug.pod	2001-04-02 15:18:41.000000000 +1000
+++ perl-5.6.1/pod/perldebug.pod	2004-12-22 23:01:32.000000000 +1100
@@ -634,7 +634,7 @@
 with two methods: C<IN> and C<OUT>.  These should return filehandles to use
 for debugging input and output correspondingly.  The C<new> method should
 inspect an argument containing the value of C<$ENV{PERLDB_NOTTY}> at
-startup, or C<"/tmp/perldbtty$$"> otherwise.  This file is not 
+startup, or C<"~/.perldbtty$$"> otherwise.  This file is not 
 inspected for proper ownership, so security hazards are theoretically
 possible.
 
diff -Naur --exclude=debian perl-5.6.1.orig/pod/perlfaq5.pod perl-5.6.1/pod/perlfaq5.pod
--- perl-5.6.1.orig/pod/perlfaq5.pod	2001-02-23 13:57:57.000000000 +1100
+++ perl-5.6.1/pod/perlfaq5.pod	2004-12-22 23:05:05.000000000 +1100
@@ -214,6 +214,7 @@
 	    my $count = 0;
 	    until (defined(fileno(FH)) || $count++ > 100) {
 		$base_name =~ s/-(\d+)$/"-" . (1 + $1)/e;
+		# O_EXCL is required for security reasons.
 		sysopen(FH, $base_name, O_WRONLY|O_EXCL|O_CREAT);
 	    }
 	    if (defined(fileno(FH))
@@ -549,8 +550,8 @@
 
 To open a file without blocking, creating if necessary:
 
-    sysopen(FH, "/tmp/somefile", O_WRONLY|O_NDELAY|O_CREAT)
-	    or die "can't open /tmp/somefile: $!":
+    sysopen(FH, "/foo/somefile", O_WRONLY|O_NDELAY|O_CREAT)
+	    or die "can't open /foo/somefile: $!":
 
 Be warned that neither creation nor deletion of files is guaranteed to
 be an atomic operation over NFS.  That is, two processes might both
@@ -1093,7 +1094,7 @@
 If you check L<perlfunc/open>, you'll see that several of the ways
 to call open() should do the trick.  For example:
 
-    open(LOG, ">>/tmp/logfile");
+    open(LOG, ">>/foo/logfile");
     open(STDERR, ">&LOG");
 
 Or even with a literal numeric descriptor:
diff -Naur --exclude=debian perl-5.6.1.orig/pod/perlfaq8.pod perl-5.6.1/pod/perlfaq8.pod
--- perl-5.6.1.orig/pod/perlfaq8.pod	2001-03-04 06:53:20.000000000 +1100
+++ perl-5.6.1/pod/perlfaq8.pod	2004-12-22 23:07:01.000000000 +1100
@@ -660,10 +660,10 @@
     while (<PH>) { }                            #    plus a read
 
 To read both a command's STDOUT and its STDERR separately, it's easiest
-and safest to redirect them separately to files, and then read from those
-files when the program is done:
+to redirect them separately to files, and then read from those files
+when the program is done:
 
-    system("program args 1>/tmp/program.stdout 2>/tmp/program.stderr");
+    system("program args 1>program.stdout 2>program.stderr");
 
 Ordering is important in all these examples.  That's because the shell
 processes file descriptor redirections in strictly left to right order.
@@ -972,8 +972,8 @@
 sysopen():
 
     use Fcntl;
-    sysopen(FH, "/tmp/somefile", O_WRONLY|O_NDELAY|O_CREAT, 0644)
-        or die "can't open /tmp/somefile: $!":
+    sysopen(FH, "/foo/somefile", O_WRONLY|O_NDELAY|O_CREAT, 0644)
+        or die "can't open /foo/somefile: $!":
 
 =head2 How do I install a module from CPAN?
 
diff -Naur --exclude=debian perl-5.6.1.orig/pod/perlfunc.pod perl-5.6.1/pod/perlfunc.pod
--- perl-5.6.1.orig/pod/perlfunc.pod	2001-03-19 14:03:34.000000000 +1100
+++ perl-5.6.1/pod/perlfunc.pod	2004-12-22 23:08:21.000000000 +1100
@@ -2717,7 +2717,7 @@
     open(ARTICLE, "caesar <$article |")		# ditto
 	or die "Can't start caesar: $!";
 
-    open(EXTRACT, "|sort >/tmp/Tmp$$")		# $$ is our process id
+    open(EXTRACT, "|sort >Tmp$$")		# $$ is our process id
 	or die "Can't start sort: $!";
 
     # process argument list of files along with any includes
diff -Naur --exclude=debian perl-5.6.1.orig/pod/perlipc.pod perl-5.6.1/pod/perlipc.pod
--- perl-5.6.1.orig/pod/perlipc.pod	2001-02-23 13:57:57.000000000 +1100
+++ perl-5.6.1/pod/perlipc.pod	2004-12-22 23:09:17.000000000 +1100
@@ -847,7 +847,7 @@
     use strict;
     my ($rendezvous, $line);
 
-    $rendezvous = shift || '/tmp/catsock';
+    $rendezvous = shift || 'catsock';
     socket(SOCK, PF_UNIX, SOCK_STREAM, 0)	|| die "socket: $!";
     connect(SOCK, sockaddr_un($rendezvous))	|| die "connect: $!";
     while (defined($line = <SOCK>)) {
@@ -868,7 +868,7 @@
     sub spawn;  # forward declaration
     sub logmsg { print "$0 $$: @_ at ", scalar localtime, "\n" }
 
-    my $NAME = '/tmp/catsock';
+    my $NAME = 'catsock';
     my $uaddr = sockaddr_un($NAME);
     my $proto = getprotobyname('tcp');
 
diff -Naur --exclude=debian perl-5.6.1.orig/pod/perllexwarn.pod perl-5.6.1/pod/perllexwarn.pod
--- perl-5.6.1.orig/pod/perllexwarn.pod	2001-03-19 14:03:34.000000000 +1100
+++ perl-5.6.1/pod/perllexwarn.pod	2004-12-22 23:10:22.000000000 +1100
@@ -363,8 +363,8 @@
     sub open {
         my $path = shift ;
         if (warnings::enabled() && $path !~ m#^/#) {
-            warnings::warn("changing relative path to /tmp/");
-            $path = "/tmp/$path" ; 
+            warnings::warn("changing relative path to /var/abc/");
+            $path = "/var/abc/$path" ; 
         }
     }
 
diff -Naur --exclude=debian perl-5.6.1.orig/pod/perlobj.pod perl-5.6.1/pod/perlobj.pod
--- perl-5.6.1.orig/pod/perlobj.pod	2001-02-23 13:57:57.000000000 +1100
+++ perl-5.6.1/pod/perlobj.pod	2004-12-22 23:11:34.000000000 +1100
@@ -527,15 +527,15 @@
     warn "time to die...";
     exit;
 
-When run as F</tmp/test>, the following output is produced:
+When run as F</foo/test>, the following output is produced:
 
-    starting program at /tmp/test line 18.
-    CREATING SCALAR(0x8e5b8) at /tmp/test line 7.
-    CREATING SCALAR(0x8e57c) at /tmp/test line 7.
-    leaving block at /tmp/test line 23.
-    DESTROYING Subtle=SCALAR(0x8e5b8) at /tmp/test line 13.
-    just exited block at /tmp/test line 26.
-    time to die... at /tmp/test line 27.
+    starting program at /foo/test line 18.
+    CREATING SCALAR(0x8e5b8) at /foo/test line 7.
+    CREATING SCALAR(0x8e57c) at /foo/test line 7.
+    leaving block at /foo/test line 23.
+    DESTROYING Subtle=SCALAR(0x8e5b8) at /foo/test line 13.
+    just exited block at /foo/test line 26.
+    time to die... at /foo/test line 27.
     DESTROYING Subtle=SCALAR(0x8e57c) during global destruction.
 
 Notice that "global destruction" bit there?  That's the thread
diff -Naur --exclude=debian perl-5.6.1.orig/pod/perlop.pod perl-5.6.1/pod/perlop.pod
--- perl-5.6.1.orig/pod/perlop.pod	2001-04-02 15:18:41.000000000 +1000
+++ perl-5.6.1/pod/perlop.pod	2004-12-22 23:12:16.000000000 +1100
@@ -1049,7 +1049,7 @@
 and safest to redirect them separately to files, and then read from those
 files when the program is done:
 
-    system("program args 1>/tmp/program.stdout 2>/tmp/program.stderr");
+    system("program args 1>program.stdout 2>program.stderr");
 
 Using single-quote as a delimiter protects the command from Perl's
 double-quote interpolation, passing it on to the shell instead:
diff -Naur --exclude=debian perl-5.6.1.orig/pod/perlopentut.pod perl-5.6.1/pod/perlopentut.pod
--- perl-5.6.1.orig/pod/perlopentut.pod	2001-02-23 13:57:57.000000000 +1100
+++ perl-5.6.1/pod/perlopentut.pod	2004-12-22 23:13:59.000000000 +1100
@@ -142,11 +142,11 @@
     open(WTMP, "+< /usr/adm/wtmp") 
         || die "can't open /usr/adm/wtmp: $!";
 
-    open(SCREEN, "+> /tmp/lkscreen")
-        || die "can't open /tmp/lkscreen: $!";
+    open(SCREEN, "+> lkscreen")
+        || die "can't open lkscreen: $!";
 
-    open(LOGFILE, "+>> /tmp/applog"
-        || die "can't open /tmp/applog: $!";
+    open(LOGFILE, "+>> applog"
+        || die "can't open applog: $!";
 
 The first one won't create a new file, and the second one will always
 clobber an old one.  The third one will create a new file if necessary
diff -Naur --exclude=debian perl-5.6.1.orig/t/lib/io_unix.t perl-5.6.1/t/lib/io_unix.t
--- perl-5.6.1.orig/t/lib/io_unix.t	2001-02-23 13:57:57.000000000 +1100
+++ perl-5.6.1/t/lib/io_unix.t	2004-12-13 00:23:09.000000000 +1100
@@ -38,7 +38,7 @@
     }
 }
 
-$PATH = "/tmp/sock-$$";
+$PATH = "sock-$$";
 
 # Test if we can create the file within the tmp directory
 if (-e $PATH or not open(TEST, ">$PATH") and $^O ne 'os2') {
diff -Naur --exclude=debian perl-5.6.1.orig/utils/c2ph.PL perl-5.6.1/utils/c2ph.PL
--- perl-5.6.1.orig/utils/c2ph.PL	2001-02-23 13:57:58.000000000 +1100
+++ perl-5.6.1/utils/c2ph.PL	2004-12-22 23:30:00.000000000 +1100
@@ -258,6 +258,7 @@
 
 $RCSID = '$Id: c2ph,v 1.7 95/10/28 10:41:47 tchrist Exp Locker: tchrist $';
 
+use File::Temp;
 
 ######################################################################
 
@@ -446,6 +447,13 @@
     printf "%-16s%-15s  %s\n", $var, eval "\$$var", $msg;
 }
 
+sub safedir {
+    $SAFEDIR = File::Temp::tempdir("c2ph.XXXXXX", TMPDIR => 1, CLEANUP => 1)
+      unless (defined($SAFEDIR));
+}
+
+undef $SAFEDIR;
+
 $recurse = 1;
 
 if (@ARGV) {
@@ -461,14 +469,15 @@
     }
     elsif (@ARGV == 1 && $ARGV[0] =~ /\.c$/) {
 	local($dir, $file) = $ARGV[0] =~ m#(.*/)?(.*)$#;
-	$chdir = "cd $dir; " if $dir;
+	$chdir = "cd $dir && " if $dir;
 	&system("$chdir$CC $CFLAGS $DEFINES $file") && exit 1;
 	$ARGV[0] =~ s/\.c$/.s/;
     }
     else {
-	$TMP = "/tmp/c2ph.$$.c";
+	&safedir;
+	$TMP = "$SAFEDIR/c2ph.$$.c";
 	&system("cat @ARGV > $TMP") && exit 1;
-	&system("cd /tmp; $CC $CFLAGS $DEFINES $TMP") && exit 1;
+	&system("cd $SAFEDIR && $CC $CFLAGS $DEFINES $TMP") && exit 1;
 	unlink $TMP;
 	$TMP =~ s/\.c$/.s/;
 	@ARGV = ($TMP);
@@ -1239,7 +1248,8 @@
 }
 
 sub compute_intrinsics {
-    local($TMP) = "/tmp/c2ph-i.$$.c";
+    &safedir;
+    local($TMP) = "$SAFEDIR/c2ph-i.$$.c";
     open (TMP, ">$TMP") || die "can't open $TMP: $!";
     select(TMP);
 
@@ -1267,7 +1277,7 @@
     close TMP;
 
     select(STDOUT);
-    open(PIPE, "cd /tmp && $CC $TMP && /tmp/a.out|");
+    open(PIPE, "cd $SAFEDIR && $CC $TMP && $SAFEDIR/a.out|");
     while (<PIPE>) {
 	chop;
 	split(' ',$_,2);;
@@ -1276,7 +1286,7 @@
 	$intrinsics{$_[1]} = $template{$_[0]};
     }
     close(PIPE) || die "couldn't read intrinsics!";
-    unlink($TMP, '/tmp/a.out');
+    unlink($TMP, "$SAFEDIR/a.out");
     print STDERR "done\n" if $trace;
 }
 
diff -Naur --exclude=debian perl-5.6.1.orig/utils/perlbug.PL perl-5.6.1/utils/perlbug.PL
--- perl-5.6.1.orig/utils/perlbug.PL	2001-02-23 13:57:58.000000000 +1100
+++ perl-5.6.1/utils/perlbug.PL	2004-12-22 23:33:25.000000000 +1100
@@ -78,7 +78,7 @@
 print OUT <<'!NO!SUBS!';
 
 use Config;
-use File::Spec;		# keep perlbug Perl 5.005 compatible
+use File::Temp;
 use Getopt::Std;
 use strict;
 
@@ -913,10 +913,9 @@
 }
 
 sub filename {
-    my $dir = File::Spec->tmpdir();
-    $filename = "bugrep0$$";
-    $filename++ while -e File::Spec->catfile($dir, $filename);
-    $filename = File::Spec->catfile($dir, $filename);
+    my ($fh, $filename) = File::Temp::tempfile(UNLINK => 1);
+    close($fh);
+    return $filename;
 }
 
 sub paraprint {

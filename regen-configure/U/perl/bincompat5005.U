?RCS: Copyright (c) 1996, Chip Salzenberg
?RCS:
?RCS: You may distribute under the terms of either the GNU General Public
?RCS: License or the Artistic License, as specified in the README file.
?RCS:
?MAKE:bincompat5005 d_bincompat5005: Oldconfig Myread Setvar cat \
	usethreads usemultiplicity
?MAKE:	-pick add $@ %<
?Y:TOP
?S:bincompat5005:
?S:	This variable contains y if this version of Perl should be
?S:	binary-compatible with Perl 5.005.
?S:.
?S:d_bincompat5005:
?S:	This variable conditionally defines BINCOMPAT5005 so that embed.h
?S:	can take special action if this version of Perl should be
?S:	binary-compatible with Perl 5.005.  This is impossible for builds
?S:	that use features like threads and multiplicity it is always $undef
?S:	for those versions.
?S:.
?C:PERL_BINCOMPAT_5005:
?C:	This symbol, if defined, indicates that this version of Perl should be
?C:	binary-compatible with Perl 5.005.  This is impossible for builds
?C:	that use features like threads and multiplicity it is always $undef
?C:	for those versions.
?C:.
?H:#$d_bincompat5005 PERL_BINCOMPAT_5005			/**/
?H:.
: Binary compatibility with 5.005 is not possible for builds
: with advanced features
case "$usethreads$usemultiplicity" in
*define*)
	bincompat5005="$undef"
	d_bincompat5005="$undef"
	;;
*)	$cat <<EOM

This version of Perl can be compiled for binary compatibility with 5.005.
If you decide to do so, you will be able to continue using most of the
extensions that were compiled for Perl 5.005.

EOM
	case "$bincompat5005$d_bincompat5005" in
	*"$undef"*) dflt=n ;;
	*) dflt=y ;;
	esac
	rp='Binary compatibility with Perl 5.005?'
	. ./myread
	case "$ans" in
	y*) val="$define" ;;
	*)  val="$undef" ;;
	esac
	set d_bincompat5005
	eval $setvar
	case "$d_bincompat5005" in
	"$define")
		bincompat5005="$define"
		;;
	*)	bincompat5005="$undef"
		d_bincompat5005="$undef"
		;;
	esac
	;;
esac


